/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package practicafinalsmm;


import java.awt.Color;
import java.awt.image.BufferedImage;
import sm.MCG.iu.Dibujo;
import sm.MCG.iu.Lienzo2DImagen;

/**
 * Clase VentanaInternaImagen para activar la imagen y hacer figuras, hereda de VentanaInternaSM
 * @author mati
 */
public class VentanaInternaImagen extends VentanaInternaSM {
    
    /**
     * VentanaFinal parent, representación de la clase que usa la ventana interna, para mandar información de vuelta.
     */
    private VentanaFinal parent = null ;

    /**
     * Constructor de la clase VentanaInternaImagen.
     * @param nuevo, nombre de la imagen
     * @param padre, ventana final que usa la ventana interna.
     */
    public VentanaInternaImagen(String nuevo, VentanaFinal padre ){
        super(nuevo);
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.parent=padre;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lienzo2DImagen1 = new sm.MCG.iu.Lienzo2DImagen();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lienzo2DImagen1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lienzo2DImagen1MouseMoved(evt);
            }
        });
        lienzo2DImagen1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lienzo2DImagen1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lienzo2DImagen1Layout = new javax.swing.GroupLayout(lienzo2DImagen1);
        lienzo2DImagen1.setLayout(lienzo2DImagen1Layout);
        lienzo2DImagen1Layout.setHorizontalGroup(
            lienzo2DImagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 384, Short.MAX_VALUE)
        );
        lienzo2DImagen1Layout.setVerticalGroup(
            lienzo2DImagen1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(lienzo2DImagen1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        parent.setMiVentana((Dibujo)lienzo2DImagen1.getDibujo(),lienzo2DImagen1.getMFiguras(),lienzo2DImagen1.getContorno(),lienzo2DImagen1.getRelleno());
        
    }//GEN-LAST:event_formInternalFrameActivated

    private void lienzo2DImagen1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo2DImagen1MouseMoved
       try{ 
            int pixel = lienzo2DImagen1.getImage().getRGB(evt.getX(), evt.getY());
            int red = (new Color(pixel)).getRed();
            int green = (new Color(pixel)).getGreen();
            int blue = (new Color(pixel)).getBlue();
            this.parent.setEtiqueta_barra_menu(" Red "+String.valueOf(red)+" Green "+String.valueOf(green)+" Blue "+String.valueOf(blue));
       }catch(Exception ex){
           this.parent.setEtiqueta_barra_menu(" ");
       }
    }//GEN-LAST:event_lienzo2DImagen1MouseMoved

    private void lienzo2DImagen1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lienzo2DImagen1MouseClicked
        if(lienzo2DImagen1.getEditar() && lienzo2DImagen1.getMFiguras()!=null){
            parent.setMiVentana((Dibujo) lienzo2DImagen1.getDibujo(),lienzo2DImagen1.getMFiguras(),lienzo2DImagen1.getContorno(),lienzo2DImagen1.getRelleno());
       }
    }//GEN-LAST:event_lienzo2DImagen1MouseClicked

    /**
     * Getter del lienzo que pintará la imagen.
     * @return Lienzo2DImagen, La imagen pintada o lienzo para dibujar figuras.
     */
    public Lienzo2DImagen lienzo1(){
        return lienzo2DImagen1;
    }
    
    /**
     * Getter de la imagen seleccionada.
     * @return BufferedImage, La imagen seleccionada.
     */
    @Override
    public BufferedImage getImagen(){
        return lienzo2DImagen1.getImage();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private sm.MCG.iu.Lienzo2DImagen lienzo2DImagen1;
    // End of variables declaration//GEN-END:variables

}

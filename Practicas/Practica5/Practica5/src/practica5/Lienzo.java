/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica5;

import com.sun.javafx.geom.QuadCurve2D;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Arc2D;
import java.awt.geom.Area;
import java.awt.geom.CubicCurve2D;
import java.awt.geom.Ellipse2D;
import java.awt.geom.GeneralPath;
import java.awt.geom.Line2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.geom.RoundRectangle2D;
import java.util.ArrayList;

/**
 *
 * @author chipi
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
        punto = new Point(-500,-500);
        lineaA = new Point(-500,-500);
        lineaB = new Point(-500,-500);
        color = Color.BLACK;
        dibujo = Dibujo.enum_punto;
        relleno = Boolean.FALSE;
        vShape = new ArrayList();
    }
    
    public void limpiar_lienzo(){
        punto = new Point(-500,-500);
        lineaA = new Point(-500,-500);
        lineaB = new Point(-500,-500);
        color = Color.BLACK;
        dibujo = Dibujo.enum_punto;
        relleno = Boolean.FALSE;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editar = new java.awt.Checkbox();

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        editar.setLabel("Mover Dibujo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(293, Short.MAX_VALUE)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(270, Short.MAX_VALUE)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        punto = evt.getPoint();
        repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        l = new Line2D.Float(evt.getPoint(), evt.getPoint());
        pAux = evt.getPoint();
        rectangulo = new Rectangle(pAux);
        // a√±adir al vector
        vShape.add(l);
        vShape.add(rectangulo);
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        l.setLine(l.getP1(), evt.getPoint());
        formMouseDragged(evt);
        repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
       // if(){  // mover forma
       //     if(rectangulo!=null) rectangulo.setLocation(evt.getPoint());
        //}else{
            l.setLine(l.getP1(), evt.getPoint());
            rectangulo.setFrameFromDiagonal(pAux, evt.getPoint());
       // }
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void pruebaShape(Graphics2D g2d){
        Point2D p1=new Point2D.Float(100,50);
        Point2D p2=new Point2D.Float(350,50);
        Line2D linea = new Line2D.Float(p1,p2);
        g2d.draw(linea);
        Rectangle2D rectangulito = new Rectangle2D.Float(20,40,60,80);
        g2d.draw(rectangulito);
        RoundRectangle2D round = new RoundRectangle2D.Float(20,130,60,80,90,100);
        g2d.draw(round);
        Ellipse2D elipse = new Ellipse2D.Float(20,220,30,80);
        g2d.draw(elipse);
        Arc2D arc = new Arc2D.Float(90, 70, 100, 100, 0, 90, 2);
        g2d.draw(arc);
        CubicCurve2D cc = new CubicCurve2D.Float(100, 140, 250, 180, 250, 100, 350, 140);
        g2d.draw(cc);
        //QuadCurve2D cua = new QuadCurve2D(0,0, 0, 0, 0, 0);
        //g2d.draw((Shape) cua);
        //trazo libre
        Rectangle2D rectanguloPath = new Rectangle2D.Float(220,160,60,80);
        GeneralPath gpth = new GeneralPath(rectanguloPath);// no entiendo, no hace nada, le tengo que pasar un array de puntos
        g2d.draw(gpth);
        
        Rectangle2D rectanguloArea = new Rectangle2D.Float(120,160,60,80);
        Area arean = new Area(rectanguloArea); // idem, esto no hace nada 
        g2d.draw(arean);
    }
    @Override
     public void paint(Graphics g){
        super.paint(g);
        Graphics2D g2d=(Graphics2D)g;
        if(l!=null){g2d.draw(l);}
        if(rectangulo!=null){g2d.draw(this.rectangulo);}
        
        for(Shape s:vShape){ // para dejar pintados todos los rectangulos
            g2d.draw(s);
        }
        
        pruebaShape(g2d);
        
    }
    public void setColor(Color color){
        this.color = color;
    }
    public Color getColor(){
        return color;
    }
    
    public void setDibujo(Enum enumerado){
        this.dibujo = enumerado;
    }
    public Enum getDibujo(){
        return dibujo;
    }
    
    public void setRelleno(Boolean booleano){
        this.relleno = booleano;
    }
    public Boolean getRelleno(){
        return relleno;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox editar;
    // End of variables declaration//GEN-END:variables
    private Point punto, lineaA, lineaB,pAux;
    private Color color ;
    private Enum dibujo ;
    private Boolean relleno ;
    private Line2D l;
    private Rectangle2D rectangulo;
    private ArrayList<Shape> vShape;// no he podido dejar list
}
